# devops/staging/docker-compose-staging.yml
version: '3.8'
services:
  ice-pulse-api:
    image: docker.io/aipioppi/ice-pulse-api:0.0.8.RELEASE # Versione iniziale
    container_name: ice-pulse-api-staging
    ports:
      - "8081:80" # Porta diversa da dev per evitare conflitti
    environment:
      - ENVIRONMENT=staging
      - NODE_ENV=staging
      - DEPLOY_TIMESTAMP=$(date +%s)
    restart: unless-stopped
    # Resource limits maggiori per staging (come nel K8s)
    deploy:
      resources:
        limits:
          cpus: '0.50' # 500m CPU (più di dev)
          memory: 512M # 512Mi memory  
        reservations:
          cpus: '0.15' # 150m CPU
          memory: 256M # 256Mi memory
    # Health check più robusto per staging
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 10s # Check più frequenti
      timeout: 5s
      retries: 3
      start_period: 30s
    # Logging con retention maggiore
    logging:
      driver: "json-file"
      options:
        max-size: "50m" # Log files più grandi
        max-file: "5" # Più file di backup
    # Labels per identificazione
    labels:
      - "environment=staging"
      - "app=ice-pulse-api"
      - "version=staging"
  # Load balancer Nginx per staging (opzionale)
  nginx-staging:
    image: nginx:alpine
    container_name: nginx-staging
    ports:
      - "80:80" # Porta standard per staging
    volumes:
      - ./nginx-staging.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ice-pulse-api
    restart: unless-stopped
    # Health check per nginx
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "environment=staging"
      - "service=nginx"
